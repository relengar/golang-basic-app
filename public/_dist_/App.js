import './App.css.proxy.js';
/* src/App.svelte generated by Svelte v3.23.0 */
import {
	SvelteComponent,
	append,
	attr,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	space,
	text,
	transition_in,
	transition_out
} from "/web_modules/svelte/internal.js";

import Recipe from "./components/recipes/Recipe.js";
import CreateRecipe from "./components/recipes/CreateRecipe.js";
import Router from "./router/Router.js";
import Link from "./components/Link.js";

function create_default_slot_1(ctx) {
	let t;

	return {
		c() {
			t = text("Recipes");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

// (41:2) <Link path={'/recipes/new'}>
function create_default_slot(ctx) {
	let t;

	return {
		c() {
			t = text("Create Recipe");
		},
		m(target, anchor) {
			insert(target, t, anchor);
		},
		d(detaching) {
			if (detaching) detach(t);
		}
	};
}

function create_fragment(ctx) {
	let div;
	let header;
	let t0;
	let t1;
	let current;

	const link0 = new Link({
			props: {
				path: "/recipes",
				$$slots: { default: [create_default_slot_1] },
				$$scope: { ctx }
			}
		});

	const link1 = new Link({
			props: {
				path: "/recipes/new",
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			}
		});

	const router = new Router({ props: { routes: /*routes*/ ctx[0] } });

	return {
		c() {
			div = element("div");
			header = element("header");
			create_component(link0.$$.fragment);
			t0 = space();
			create_component(link1.$$.fragment);
			t1 = space();
			create_component(router.$$.fragment);
			attr(header, "class", "App-header svelte-1efkygv");
			attr(div, "class", "App svelte-1efkygv");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			append(div, header);
			mount_component(link0, header, null);
			append(header, t0);
			mount_component(link1, header, null);
			append(div, t1);
			mount_component(router, div, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const link0_changes = {};

			if (dirty & /*$$scope*/ 2) {
				link0_changes.$$scope = { dirty, ctx };
			}

			link0.$set(link0_changes);
			const link1_changes = {};

			if (dirty & /*$$scope*/ 2) {
				link1_changes.$$scope = { dirty, ctx };
			}

			link1.$set(link1_changes);
		},
		i(local) {
			if (current) return;
			transition_in(link0.$$.fragment, local);
			transition_in(link1.$$.fragment, local);
			transition_in(router.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(link0.$$.fragment, local);
			transition_out(link1.$$.fragment, local);
			transition_out(router.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(link0);
			destroy_component(link1);
			destroy_component(router);
		}
	};
}

function instance($$self) {
	const routes = [
		{ path: "/recipes", component: Recipe },
		{
			path: "/recipes/new",
			component: CreateRecipe
		}
	];

	return [routes];
}

class App extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default App;